name: Publish npm package

on:
  push:
    branches:
      # Trigger on pushes to the master branch
      - master

jobs:
  Release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://npm.pkg.github.com/'

      - uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-release-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-release-pnpm-store-

      - name: Setup environment
        run: |
          pnpm install
          git config --global user.email "admin@southpointe.tech"
          git config --global user.name "Github Actions"

      - name: Determine version bump
        id: determine-version-bump
        run: |
          commit_message=$(git log -1 --pretty=%B)
          echo "Last commit message: $commit_message"

          if [[ "$commit_message" == *"BREAKING"* ]]; then
            echo "::set-output name=version::major"
          elif [[ "$commit_message" == *"feat:"* ]]; then
            echo "::set-output name=version::minor"
          elif [[ "$commit_message" == *"fix:"* ]]; then
            echo "::set-output name=version::patch"
          else
            echo "::set-output name=skip::true"
          fi

      - name: Bump version
        if: steps.determine-version-bump.outputs.skip != 'true'
        run: |
          version_type=${{ steps.determine-version-bump.outputs.version }}
          echo "Bumping version as $version_type"
          pnpm version $version_type

      - name: Build and Publish
        if: steps.determine-version-bump.outputs.skip != 'true'
        run: |
          pnpm build
          echo "//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}" > .npmrc
          npm publish
        env:
          # Use the automatically created GITHUB_TOKEN secret for authentication
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Push changes
        if: steps.determine-version-bump.outputs.skip != 'true'
        run: git push origin master --follow-tags
